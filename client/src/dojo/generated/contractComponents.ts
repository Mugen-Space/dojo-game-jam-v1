/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export type ContractComponents = Awaited<
  ReturnType<typeof defineContractComponents>
>;

export function defineContractComponents(world: World) {
  return {
    Moves: (() => {
      return defineComponent(
        world,
        {
          player: RecsType.BigInt,
          remaining: RecsType.Number,
          last_direction: RecsType.Number,
        },
        {
          metadata: {
            name: "Moves",
            types: ["contractaddress", "u8", "enum"],
            customTypes: ["Direction"],
          },
        }
      );
    })(),
    Position: (() => {
      return defineComponent(
        world,
        {
          player: RecsType.BigInt,
          vec: { x: RecsType.Number, y: RecsType.Number },
        },
        {
          metadata: {
            name: "Position",
            types: ["contractaddress", "u32", "u32"],
            customTypes: ["Vec2"],
          },
        }
      );
    })(),
    Game: (() => {
      return defineComponent(
        world,
        {
          game_id: RecsType.Number,
          player1: RecsType.BigInt,
          player2: RecsType.BigInt,
          choice1: RecsType.Number,
          choice2: RecsType.Number,
          seed: RecsType.Number,
        },
        {
          metadata: {
            name: "Game",
            types: [
              "u32",
              "contractaddress",
              "contractaddress",
              "u8",
              "u8",
              "u8",
            ],
            customTypes: [],
          },
        }
      );
    })(),
    Player: (() => {
      return defineComponent(
        world,
        {
          player: RecsType.BigInt,
          username: RecsType.BigInt,
          balance: RecsType.Number,
          nft_address: RecsType.BigInt,
        },
        {
          metadata: {
            name: "Player",
            types: ["contractaddress", "felt252", "u32", "contractaddress"],
            customTypes: [],
          },
        }
      );
    })(),
    GameCreated: (() => {
      return defineComponent(
        world,
        {
          game_id: RecsType.Number,
          owner: RecsType.BigInt,
        },
        {
          metadata: {
            name: "GameCreated",
            types: [],
            customTypes: [],
          },
        }
      );
    })(),
    Gamejoined: (() => {
      return defineComponent(
        world,
        {
          game_id: RecsType.Number,
          player: RecsType.BigInt,
        },
        {
          metadata: {
            name: "Gamejoined",
            types: ["u32", "contractaddress"],
            customTypes: [],
          },
        }
      );
    })(),
    GameEnded: (() => {
      return defineComponent(
        world,
        {
          game_id: RecsType.Number,
          seed: RecsType.Number,
        },
        {
          metadata: {
            name: "GameEnded",
            types: ["u32", "u32"],
            customTypes: [],
          },
        }
      );
    })(),
  };
}
